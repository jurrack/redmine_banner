-return unless BannerHelper.is_enabled?(@project)
-banner = Banner.find(:first, :conditions => ['project_id = ?', @project.id])
-return '' unless banner && banner.enable_banner?
-display_part = banner.display_part
-return '' unless BannerHelper.is_action_to_display?(@_controller, display_part)

#project_banner_area.banner_area
  #banner_content.banner.banner_#{banner.style}
    =textilizable banner.banner_description
 
-if authorize_for(:banner, :edit)
  #banner_edit
    = link_to l(:button_edit),
    {:controller => 'projects', :action => "settings", :id => @project, :tab => 'banner'},
    {:class => 'icon banner-icon-edit', :title => l(:button_edit)}
    
    %a.icon.banner-icon-off{:href=>"#",
    :onclick=>"if (confirm('#{l(:text_are_you_sure)}')) { new Ajax.Updater('banner_area',
    '#{url_for(:controller => :banner, :action => 'project_banner_off', :project_id => @project)}',
    {asynchronous:true, evalScripts:true, parameters:'authenticity_token=' + encodeURIComponent('#{form_authenticity_token}')}); };
    #hideBanner(); return false;",
    :title=>"#{l(:banner_off)}"}
      = l(:button_off)

:javascript
  document.observe("dom:loaded", function() {
    new Insertion.Top($('content'), $('project_banner_area'));
  });